id,question,desired_answer,expanded_answer,topics
1,What is the role of a prototype program in problem solving?,To simulate the behaviour of portions of the desired software product.,"A prototype program is a simplified early version of an intended software system that simulates key features or functionality of the final product. It is used in the early stages of problem solving and development to explore ideas, validate requirements, and get feedback from users. By testing a prototype, developers and stakeholders can identify flaws or misunderstandings in the design and refine the solution before full-scale implementation. This approach reduces development risk and helps ensure the final software meets usersâ€™ needs.",['SW_Process']
2,What stages in the software life cycle are influenced by the testing stage?,The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7),"In the software development life cycle, the testing stage can have feedback effects on both earlier and later phases. Bugs or issues discovered during testing often send developers back to the coding phase to fix defects or adjust the implementation. Testing outcomes can also inform the solution refinement or maintenance phase, where the overall solution is improved or fine-tuned based on test results. Thus, testing not only validates the software but also influences ongoing development and future refinements of the system.",['SW_Process']
3,What are the main advantages associated with object-oriented programming?,Abstraction and reusability.,"Object-oriented programming (OOP) offers several advantages that improve software design and maintainability. One major benefit is abstraction, which allows programmers to manage complexity by modeling real-world entities and hiding unnecessary implementation details behind clean interfaces. This goes hand-in-hand with encapsulation, where data and related behaviors are bundled into classes, helping protect the internal state of objects and reduce system complexity. Another significant advantage is reusability: OOP allows developers to reuse and extend existing code through class inheritance and polymorphism, rather than writing code from scratch. These principles make OOP systems more modular, easier to maintain, and adaptable to new requirements.",['OOP']
